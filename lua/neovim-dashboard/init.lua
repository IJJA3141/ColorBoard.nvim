-- utils
local utils = {}
function utils.buf_is_empty(bufnr)
	bufnr = bufnr or 0
	return vim.api.nvim_buf_line_count(0) == 1 and vim.api.nvim_buf_get_lines(0, 0, -1, false)[1] == ""
end

-- file
local M = {}

---@type config
local default_opts = {
	keybinds = {
		{
			icon = "!",
			key = "g",
			description = "say something ?",
			func = function()
				print("hello world !")
			end,
		},
	},
	dashboards = {
		{
			width = 1,
			height = 1,
			colors = false,
			ascii = { "No config ?" },
		},
		{
			width = 10,
			height = 22,
			colors = false,
			ascii = {
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ª‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢Ä‚£§‚°à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ñ‚£ø‚£•‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Å‚†à‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚£§‚£∂‚£ø‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚°ø‚°ø‚†ø‚°ø‚†ø‚°ø‚¢ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚¢ª‚£´‚£´‚£µ‚£™‚£û‚£û‚¢Æ‚£≥‚£≥‚°≥‚£¢‚£¢‚£†‚°Ä‚†§‚£â‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚£§‚£º‚£ø‚£ø‚¢ø‚¢õ‚°≠‚¢ñ‚£ü‚¢Ø‚¢∑‚¢∑‚°ø‚£∑‚£∑‚£Ω‚¢µ‚£≥‚°≥‚£ù‚£ó‚¢ó‚°µ‚°Ø‚£ª‚°≤‚£Ñ‚¢Ç‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£ã‚°µ‚°ö‚°µ‚°ï‚¢ü‚¢Æ‚¢Ø‚°´‚£ó‚°Ω‚£ù‚°Æ‚°Ø‚£ó‚¢∑‚£´‚¢ó‚¢∑‚¢Ω‚¢ù‚¢Ω‚£ï‚¢Ø‚¢æ‚¢ù‚°¶‚£ñ‚°¨‚£â‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚°≠‚°∫‚¢®‚°¥‚°´‚£ã‚°Æ‚°Ø‚£≥‚¢Ø‚¢û‚¢ó‚£ï‚¢∑‚¢Ω‚¢ù‚£û‚£ó‚¢Ω‚¢Ω‚¢π‚°∏‚£Æ‚£ª‚¢Æ‚¢Ø‚¢´‚£ó‚¢Ω‚£∫‚¢ù‚°Ω‚£ù‚¢¶‚£ô‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢õ‚°¥‚£´‚†ó‚°º‚£ù‚†û‚£°‚¢∑‚¢ù‚£Ω‚°∫‚°µ‚£ã‚¢Æ‚°∫‚£ù‚°µ‚£ª‚°∫‚£™‚†Ø‚°°‚¢™‚£û‚°µ‚£≥‚¢´‚£ò‚¢∏‚£™‚¢≥‚¢Ø‚¢ø‚¢æ‚¢ø‚£ø‚£æ‚£¢‚°ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚°∞‚£ù‚£º‚¢£‚¢æ‚¢Ω‚†ù‚£∏‚¢Ω‚¢µ‚£ª‚£™‚¢æ‚¢ë‚¢∏‚£∏‚¢Ω‚£ï‚°è‚°º‚£Ω‚†ö‚°∞‚¢°‚£ü‚°º‚°∫‚£±‚£ø‚£ø‚°ò‚£Æ‚°≥‚£ù‚°µ‚°Ø‚£≥‚°≥‚£µ‚¢≥‚°±‚°à‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢£‚¢∫‚£Ω‚£ø‚¢É‚°æ‚°Ω‚°∫‚¢®‚°≥‚°Ω‚£ï‚£ó‚£ó‚¢ë‚¢∞‚¢±‚£≥‚£≥‚°≥‚¢∏‚£ù‚¢é‚¢∞‚†É‚°ß‚£ó‚†ü‚£∏‚£ø‚£ø‚£ø‚°á‚¢≥‚£≥‚°±‚£ù‚¢æ‚¢µ‚£ª‚£™‚¢Ø‚£≥‚°±‚°ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚°Ö‚£Ø‚£ø‚£ø‚°è‚£º‚¢Ω‚¢ù‚†á‚°á‚°Ø‚°Ø‚£∫‚£∫‚†Ç‚°å‚¢Ü‚£ü‚£û‚¢Æ‚¢é‚¢ó‚°ù‚°Ñ‚°á‚¢™‚¢û‚°ó‚£Ω‚£ø‚£ü‚¢ø‚°ø‚£ó‚¢Ö‚¢ó‚£ó‚°ï‚°Ω‚£ï‚£ó‚¢∑‚¢ù‚£Æ‚£≥‚°ê‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚£∞‚£Ω‚£ø‚£ø‚£ø‚¢ê‚£Ø‚°≥‚£Ø‚†°‚°á‚£Ø‚¢è‚£û‚¢é‚†Ñ‚°á‚°±‚£µ‚°≥‚£è‚¢é‚¢æ‚¢¢‚°ó‚°ï‚£∏‚°ù‚£º‚£ø‚£ø‚£ø‚£∂‚£æ‚£ø‚°Ü‚¢ù‚£û‚¢æ‚°∏‚°™‚£û‚¢Ω‚£ù‚¢û‚£û‚¢Æ‚†ê‚£ø‚£ø‚£ø‚¢ø‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚£∞‚£ø‚£ø‚£ø‚£ø‚°á‚¢é‚°∑‚°Ω‚£∫‚†®‚°™‚°æ‚°∞‚¢Ω‚¢∏‚°å‚£ñ‚†∏‚£ö‚£™‚£ç‚£¨‚£µ‚£æ‚£ø‚£æ‚£∂‚£Ω‚£ø‚£ß‚£ã‚£ª‚£ø‚£ø‚£ø‚£ø‚°î‚°±‚£≥‚¢Ω‚£ú‚¢¨‚¢≥‚£≥‚£´‚¢û‚°µ‚°Ö‚†Ω‚¢©‚°¥‚£∂‚¢≠‚°ô‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ë‚£æ‚£ø‚£ø‚£ø‚£ø‚†Ö‚££‚¢Ø‚£´‚¢æ‚°Ö‚¢á‚¢ø‚°Ä‚¢è‚†º‚¢ó‚£ö‚£õ‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢ø‚¢ø‚£ø‚£ø‚£ø‚£∑‚°å‚†™‚£ó‚£ó‚£ó‚£ï‚°¢‚°ù‚°≥‚¢Ω‚°É‚£º‚¢ô‚¢â‚†ä‚¢Ø‚¢∑‚°å‚¢ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ø‚£∏‚£ø‚£ø‚£ø‚£ø‚°ø‚¢†‚¢Ø‚°≥‚¢µ‚£≥‚°É‚£¶‚†π‚£∏‚†å‚†Ä‚†Ä‚†π‚£ø‚£ø‚£é‚¢ª‚£ø‚£ø‚£Ø‚£õ‚£Ω‚£ø‚£ø‚°ø‚†â‚†Ä‚†≥‚£∑‚£¶‚£ù‚¢ª‚£ø‚£ø‚£Ü‚†±‚°±‚¢ß‚£≥‚£ù‚¢Æ‚¢Æ‚£≤‚†±‚°°‚°∫‚¢º‚°π‚£ú‚¢ó‚£ø‚°ú‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚£æ‚£ø‚£ø‚£ø‚°ø‚¢É‚£Ø‚†≥‚°´‚£∫‚£∫‚¢ê‚£ø‚£ø‚°¶‚°Ä‚†Ä‚¢Ä‚£º‚£ø‚£ø‚£ø‚£á‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚£¶‚¢ª‚£ø‚£ø‚£ß‚†å‚¢∑‚¢º‚£∏‚£ô‚°ù‚°Æ‚°Æ‚¢Ç‚°Ø‚°≤‚°ë‚†µ‚°±‚£ü‚°ß‚£∫‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚£ø‚£ø‚£ø‚¢ü‚°°‚°ü‚¢é‚†∞‚£á‚¢∫‚£∫‚¢∞‚£ø‚£ø‚°™‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚¢∏‚£∑‚£¥‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚°å‚£ø‚£ø‚£ø‚°¶‚°±‚£©‚†§‚†¨‚°ô‚¢µ‚†É‚£∏‚¢é‚¢é‚°Ø‚°é‚°Ç‚°ó‚°Ω‚£æ‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Æ‚¢ã‚†ï‚£ä‚£≠‚°∂‚¢É‚†è‚°É‚£™‚¢ó‚¢∏‚£ø‚£ø‚°Ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ó‚¢Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢á‚£ø‚£ø‚£ø‚°è‚£∞‚¢Ω‚£∂‚°µ‚°ú‚¢Ü‚†°‚¢Ω‚†™‚°™‚°Ø‚£≥‚†Ä‚°á‚°è‚¢∏‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚¢ü‚¢ì‚£ä‚£ã‚°®‚¢∫‚¢ï‚†ò‚£ø‚£ø‚£∑‚°∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢£‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚¢°‚£ø‚£ø‚£ø‚£∑‚£Ø‚¢π‚£ø‚£ø‚£æ‚°¨‚†Ä‚£ø‚†°‚£≥‚£´‚°ª‚¢®‚¢™‚°¢‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚£´‚£µ‚£æ‚£ø‚£ø‚£Ø‚£â‚¢á‚¢Ω‚¢ï‚¢Ö‚¢ª‚£ø‚£ø‚£∑‚£å‚°ª‚†ø‚†ø‚°õ‚£•‚£û‚¢è‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚°õ‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚£ë‚£æ‚£ø‚£ø‚£ø‚£ø‚¢ã‚£†‚†æ‚¢ü‚¢ü‚°ú‚£∞‚¢Ω‚¢Ö‚°≥‚£µ‚¢ã‚°º‚¢¢‚¢£‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°£‚£ø‚£ø‚£ø‚£ø‚£ü‚¢ø‚£ø‚°Ü‚¢Ω‚£Ç‚†∂‚£ø‚£ø‚†ø‚£ø‚°ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£ü‚¢®‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£≠‚£≠‚£≠‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚°ü‚†π‚£¥‚£∂‚†ü‚†ã‚°°‚£™‚¢Æ‚¢∫‚°ï‚¢º‚££‚¢û‚£®‚°ê‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ç‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Æ‚°á‚¢Ω‚¢à‚£≥‚°ò‚£ø‚£ø‚£¶‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£é‚£õ‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚¢ø‚†∑‚†¥‚¢ã‚£•‚°û‚°°‚†≤‚°µ‚°ª‚°î‚¢Ø‚°ö‚°û‚¢¥‚°±‚°Ö‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚¢∫‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚°´‚†Ä‚£ß‚°ì‚¢å‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚£©‚£Ω‚†ø‚°â‚£†‚£∂‚£∑‚£ø‚£ø‚£ø‚†Ö‚¢¢‚¢´‚¢Ø‚£´‚†á‚£á‚†Ø‚¢£‚¢£‚£ª‚††‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚¢ø‚£ø‚£Ø‚£ø‚£ø‚£ø‚£∑‚††‚°±‚°∏‚°è‚°ù‚£º‚£≤‚†à‚£ç‚£õ‚†õ‚†ü‚†ø‚†ø‚†ø‚¢ø‚¢ø‚¢ø‚¢ø‚†ø‚°ø‚¢ø‚†Ø‚†ø‚†õ‚°ã‚°ç‚°¶‚£Ø‚†É‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ö‚¢ú‚¢∏‚£ù‚°û‚¢∏‚¢É‚¢ï‚¢ï‚°Ø‚†é‚£º‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°å‚£ø‚£ø‚°Ω‚£ø‚£ø‚£ø‚°Ç‚°£‚¢±‚°Å‚¢æ‚°µ‚†É‚¢ê‚£ø‚£ø‚£ø‚£Ö‚¢ø‚†æ‚°∂‚°≥‚†í‚£Ç‚£¥‚£æ‚£æ‚£∑‚£ø‚†è‚¢Ä‚†á‚¢™‚¢∫‚°∫‚¢®‚£ø‚£ø‚£ø‚£ø‚¢∑‚£ø‚£á‚¢∏‚¢ú‚°Æ‚°á‚¢ú‚°î‚°ã‚£©‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°ú‚£ø‚£ø‚¢Ω‚£ø‚¢Ω‚£∑‚°ô‚°î‚†¨‚°Ç‚¢Ñ‚†Å‚¢ú‚£ø‚£ø‚†ü‚°ß‚†π‚£∂‚¢ï‚†∏‚°ú‚¢ø‚£ø‚£ø‚£ø‚£ø‚¢è‚†Ä‚°î‚°ë‚°Ö‚¢™‚¢Ø‚¢∏‚£ø‚£ø‚£ø‚¢Ø‚£ø‚£ø‚£ø‚†à‚°é‚£Ø‚°Ç‚¢ï‚¢ù‚£µ‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°ò‚£ø‚£ó‚¢ø‚£ü‚¢∫‚¢â‚†û‚°Ü‚†™‚°™‚†Ä‚†Ω‚¢ã‚£∂‚°Ä‚¢´‚°£‚£ø‚£∏‚†ó‚¢ã‚£Ñ‚¢ø‚£ø‚£ø‚¢è‚†Ç‚¢†‚†£‚°±‚°ò‚£®‚°ó‚¢∏‚£ø‚£ø‚°Ø‚£ø‚£ø‚£ø‚†è‚£¥‚°ò‚¢ú‚†é‚¢∞‚£ù‚¢Æ‚†á‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°ò‚£ø‚£á‚¢∑‚†á‚¢ú‚†Ñ‚†£‚†±‚°ò‚°†‚°ë‚¢å‚£ø‚£ß‚†ò‚†î‚†è‚°†‚£≤‚£ø‚£ø‚£é‚¢ª‚°ü‚†î‚††‚°°‚°É‚°™‚¢Ç‚†é‚£ó‚†ê‚°ø‚£ü‚£æ‚£ü‚†ø‚¢É‚£º‚£ø‚°ø‚¢ñ‚°∞‚£Ø‚£∫‚†ù‚£°‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ò‚¢Ø‚£™‚†ë‚°†‚°®‚°ë‚°î‚¢Ö‚†á‚°ï‚¢ê‚¢ø‚¢ã‚†Å‚†Ä‚†∏‚£Ω‚£ø‚£ø‚£ø‚£ø‚°ß‚†Å‚°ê‚°±‚°®‚°™‚†®‚°í‚†Ö‚†é‚°†‚£ü‚£æ‚£ø‚†ü‚£°‚£Æ‚£©‚°í‚¢∫‚°™‚¢õ‚¢ä‚£¥‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£î‚†≥‚¢Ä‚†™‚°∞‚°®‚°ä‚°¢‚°É‚¢é‚†î‚¢†‚†Ç‚†Ç‚†Ä‚°à‚£ø‚£ø‚£ø‚£ø‚†õ‚°à‚°ä‚†ú‚°ê‚†Ö‚¢Ü‚¢£‚†™‚°à‚†î‚†Ñ‚£™‚†ü‚£°‚£æ‚£ø‚£ø‚£ø‚°è‚°æ‚°®‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢ê‚†ï‚°å‚°¢‚°±‚°®‚°ä‚†é‚¢Ä‚†Ç‚†å‚°î‚†Å‚£ß‚¢∏‚°ø‚°ã‚°î‚°°‚¢™‚¢ò‚¢Ñ‚††‚°ë‚°ï‚¢Ö‚¢£‚¢±‚¢Å‚†Ö‚¢¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚°É‚¢Ö‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚¢®‚†™‚°ê‚¢ï‚†å‚°Ü‚°™‚†Ç‚†Ö‚†Ä‚†∞‚£á‚†Ä‚†ü‚¢Ä‚†¢‚°ë‚¢î‚¢ú‚†å‚°Ü‚¢á‚¢ï‚¢±‚¢ò‚¢å‚¢Ü‚†£‚°É‚¢∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£∂‚£§‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°è‚¢ê‚¢ë‚¢ú‚†∞‚°±‚¢®‚†™‚°ò‚†Ä‚¢ú‚¢ê‚†©‚†Ä‚†ä‚°∞‚¢®‚¢ä‚¢é‚†¢‚°ë‚°ï‚¢Ö‚¢£‚†™‚°ò‚°î‚¢Ö‚¢£‚¢ë‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
				"‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°É‚°ê‚°±‚¢®‚†™‚°®‚°Ç‚°á‚¢ï‚†Ä‚°á‚¢ï‚¢ï‚†Ä‚¢ï‚¢ú‚†å‚¢Ü‚¢£‚†±‚°ë‚°ú‚°å‚°Ü‚¢ï‚°ë‚¢ú‚¢å‚†™‚°Ç‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø",
			},
		},
		{
			width = 10,
			colors = true,
			height = 10,
			ascii = {
				"[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;183;109;110m‚†ê[0m[38;2;0;0;0m‚†Ä[0m[38;2;164;61;86m‚†ê[0m[38;2;239;135;156m‚°ë[0m[38;2;154;49;78m‚†Ñ[0m[38;2;248;140;171m‚†®[0m[38;2;148;38;84m‚°Ä[0m[38;2;148;39;94m‚†Ç[0m[38;2;133;27;62m‚†Ä[0m[38;2;249;145;168m‚°ë[0m[38;2;138;32;68m‚†à[0m[38;2;247;145;169m‚†¢[0m[38;2;217;114;145m‚°Å[0m[38;2;230;124;155m‚†¢[0m[38;2;238;136;155m‚°ë[0m[38;2;238;137;156m‚¢å[0m[38;2;198;92;111m‚†Ñ[0m[38;2;250;223;214m‚£ü[0m[38;2;249;232;219m‚£∑[0m[38;2;252;234;225m‚£ª[0m[38;2;252;235;225m‚£ó[0m[38;2;252;235;225m‚£Ø[0m[38;2;252;235;225m‚¢ø[0m[38;2;252;235;225m‚°Ω[0m[38;2;252;235;225m‚£Ø[0m[38;2;254;234;225m‚¢∑[0m[38;2;254;234;225m‚£ª[0m[38;2;252;235;225m‚¢æ[0m[38;2;252;235;225m‚°Ω[0m[38;2;252;235;225m‚£Ø[0m[38;2;252;235;225m‚°Ø[0m[38;2;254;234;227m‚£ø[0m[38;2;254;234;227m‚¢Ω[0m[38;2;254;234;227m‚°Ø[0m[38;2;254;234;227m‚°ø[0m[38;2;252;234;229m‚°Ω[0m[38;2;252;234;229m‚£Ø[0m[38;2;253;235;230m‚¢ø[0m[38;2;250;231;225m‚°Ω[0m[38;2;249;229;222m‚°æ[0m[38;2;247;225;219m‚°ù[0m[38;2;213;171;178m‚†Ä[0m[38;2;151;48;84m‚†Ä[0m[38;2;226;123;139m‚°Ö[0m[38;2;219;119;138m‚°ë[0m[38;2;235;133;155m‚¢å[0m[38;2;240;138;161m‚†å[0m[38;2;120;15;46m‚†Ä[0m[38;2;247;142;159m‚¢ï[0m[38;2;223;117;135m‚†à[0m[38;2;149;39;89m‚†Ä[0m[38;2;51;24;28m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;188;118;122m‚†Ñ[0m[38;2;0;0;0m‚†Ä[0m",
				"[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;41;25;21m‚††[0m[38;2;34;21;21m‚†Ä[0m[38;2;218;123;141m‚†®[0m[38;2;234;136;149m‚°ä[0m[38;2;123;55;70m‚†Ä[0m[38;2;200;98;140m‚†Ç[0m[38;2;152;45;92m‚°Ä[0m[38;2;148;40;90m‚†Å[0m[38;2;177;71;108m‚††[0m[38;2;146;39;87m‚†Å[0m[38;2;154;51;86m‚†à[0m[38;2;249;147;166m‚¢¢[0m[38;2;138;30;82m‚†Ä[0m[38;2;243;139;166m‚¢ä[0m[38;2;244;141;158m‚†¢[0m[38;2;244;140;156m‚°Å[0m[38;2;177;129;128m‚†®[0m[38;2;255;241;234m‚°ì[0m[38;2;251;233;229m‚†∑[0m[38;2;252;234;228m‚£ª[0m[38;2;253;234;227m‚£û[0m[38;2;253;234;227m‚£Ø[0m[38;2;253;234;226m‚¢ø[0m[38;2;253;234;226m‚°Ω[0m[38;2;253;234;226m‚£Ø[0m[38;2;253;234;226m‚¢ø[0m[38;2;253;234;226m‚°Ω[0m[38;2;253;234;227m‚£Ø[0m[38;2;251;237;228m‚¢ø[0m[38;2;241;216;211m‚£ä[0m[38;2;255;244;236m‚£è[0m[38;2;254;234;227m‚£Ø[0m[38;2;254;234;227m‚¢ø[0m[38;2;254;234;227m‚£Ω[0m[38;2;252;234;229m‚£ª[0m[38;2;252;234;229m‚£Ω[0m[38;2;252;234;229m‚†Ø[0m[38;2;253;233;229m‚†ü[0m[38;2;252;236;231m‚†ç[0m[38;2;176;141;149m‚†ê[0m[38;2;154;45;90m‚†à[0m[38;2;127;21;39m‚°ê[0m[38;2;223;120;137m‚†Ä[0m[38;2;233;135;153m‚°∏[0m[38;2;245;145;163m‚†Ä[0m[38;2;144;41;84m‚†Ä[0m[38;2;137;41;48m‚†Ä[0m[38;2;239;135;156m‚°¢[0m[38;2;182;78;101m‚†Ç[0m[38;2;148;46;88m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;68;42;36m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m",
				"[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;1;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;184;100;113m‚†à[0m[38;2;177;106;112m‚†Ñ[0m[38;2;75;41;49m‚°Ä[0m[38;2;147;39;90m‚†Ä[0m[38;2;150;43;93m‚°à[0m[38;2;142;35;85m‚†Ä[0m[38;2;140;33;81m‚†Ñ[0m[38;2;102;50;67m‚†Å[0m[38;2;136;42;70m‚†Ä[0m[38;2;218;118;153m‚†Ö[0m[38;2;153;48;93m‚°Ä[0m[38;2;195;91;128m‚†à[0m[38;2;240;137;155m‚†™[0m[38;2;167;63;74m‚°Ä[0m[38;2;245;175;163m‚†ò[0m[38;2;236;174;161m‚°å[0m[38;2;200;145;135m‚¢Ü[0m[38;2;217;194;182m‚¢™[0m[38;2;255;245;237m‚¢ô[0m[38;2;251;236;230m‚¢ù[0m[38;2;252;234;229m‚†Ø[0m[38;2;252;234;229m‚°ø[0m[38;2;252;234;229m‚£Ω[0m[38;2;252;234;229m‚°Ω[0m[38;2;252;234;229m‚£Ø[0m[38;2;252;234;229m‚£ü[0m[38;2;255;239;237m‚£û[0m[38;2;250;232;227m‚£∑[0m[38;2;253;234;230m‚°ª[0m[38;2;252;234;230m‚†Ω[0m[38;2;250;231;227m‚†ö[0m[38;2;255;242;236m‚†â[0m[38;2;239;221;217m‚†Ñ[0m[38;2;143;75;95m‚†Ç[0m[38;2;130;46;66m‚†Ä[0m[38;2;114;50;67m‚†Ä[0m[38;2;144;37;91m‚¢Ä[0m[38;2;118;17;43m‚†ê[0m[38;2;221;133;141m‚†Ä[0m[38;2;80;38;44m‚†Å[0m[38;2;220;116;152m‚°Ä[0m[38;2;147;43;89m‚†Ç[0m[38;2;124;35;47m‚†Ä[0m[38;2;45;26;23m‚†Ä[0m[38;2;252;152;167m‚†Ü[0m[38;2;136;29;66m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m",
				"[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;1;0;0m‚¢Ä[0m[38;2;0;0;0m‚£§[0m[38;2;34;14;12m‚£¶[0m[38;2;66;29;28m‚£∂[0m[38;2;103;50;48m‚£∂[0m[38;2;99;38;39m‚£¶[0m[38;2;70;25;25m‚£¶[0m[38;2;50;19;20m‚°¢[0m[38;2;12;5;5m‚¢§[0m[38;2;0;0;0m‚°†[0m[38;2;17;14;14m‚°†[0m[38;2;45;38;37m‚°Ä[0m[38;2;25;19;17m‚°Ä[0m[38;2;126;62;78m‚°Ä[0m[38;2;136;33;65m‚¢Ä[0m[38;2;149;46;86m‚°∞[0m[38;2;87;38;50m‚¢∏[0m[38;2;224;188;197m‚¢±[0m[38;2;161;86;104m‚¢¢[0m[38;2;148;40;72m‚†¢[0m[38;2;157;48;93m‚°Ä[0m[38;2;168;60;98m‚†à[0m[38;2;166;65;86m‚¢Ä[0m[38;2;214;138;128m‚†à[0m[38;2;227;167;154m‚†™[0m[38;2;230;166;154m‚°¢[0m[38;2;229;167;154m‚°ë[0m[38;2;231;170;157m‚°Ö[0m[38;2;234;169;157m‚¢ï[0m[38;2;205;148;136m‚†å[0m[38;2;193;163;150m‚¢Ü[0m[38;2;240;226;217m‚†ç[0m[38;2;255;247;240m‚£ô[0m[38;2;255;239;232m‚£ä[0m[38;2;255;240;234m‚†ã[0m[38;2;230;212;205m‚†Ä[0m[38;2;154;93;120m‚†Ç[0m[38;2;135;29;69m‚†Å[0m[38;2;181;95;118m‚†å[0m[38;2;150;47;91m‚¢Ä[0m[38;2;146;44;83m‚†ê[0m[38;2;149;40;85m‚°Ä[0m[38;2;49;28;30m‚†Ä[0m[38;2;126;47;62m‚†Ä[0m[38;2;141;42;69m‚†Ä[0m[38;2;15;11;12m‚†Ä[0m[38;2;45;31;29m‚†Ä[0m[38;2;152;38;87m‚°Å[0m[38;2;138;35;68m‚¢Ä[0m[38;2;44;28;28m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;127;57;55m‚†å[0m[38;2;177;101;107m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m",
				"[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;1;0;0m‚†Ä[0m[38;2;40;15;14m‚£¥[0m[38;2;253;246;247m‚£ø[0m[38;2;247;248;244m‚£ø[0m[38;2;254;255;253m‚£ª[0m[38;2;252;252;249m‚¢ø[0m[38;2;252;252;249m‚£ü[0m[38;2;253;253;251m‚£ø[0m[38;2;252;253;251m‚£ø[0m[38;2;255;255;255m‚£ø[0m[38;2;227;220;225m‚£∑[0m[38;2;203;184;195m‚£ß[0m[38;2;205;188;198m‚£á[0m[38;2;207;190;204m‚°è[0m[38;2;211;191;209m‚°Æ[0m[38;2;211;194;213m‚°∫[0m[38;2;152;116;133m‚°ò[0m[38;2;211;189;201m‚°ú[0m[38;2;198;175;187m‚£é[0m[38;2;196;170;184m‚¢é[0m[38;2;210;187;205m‚¢ß[0m[38;2;213;189;204m‚¢´[0m[38;2;186;147;150m‚°™[0m[38;2;224;164;149m‚£å[0m[38;2;193;108;113m‚£Ç[0m[38;2;141;44;66m‚†¢[0m[38;2;134;34;68m‚†¢[0m[38;2;174;94;101m‚°†[0m[38;2;240;172;163m‚°ë[0m[38;2;235;172;159m‚¢å[0m[38;2;228;165;152m‚†¢[0m[38;2;230;165;153m‚°£[0m[38;2;229;164;152m‚°ë[0m[38;2;192;126;120m‚°®[0m[38;2;225;196;208m‚°™[0m[38;2;208;187;206m‚°™[0m[38;2;222;194;213m‚°≥[0m[38;2;125;55;63m‚°ê[0m[38;2;142;72;86m‚¢§[0m[38;2;11;10;8m‚¢¢[0m[38;2;139;46;69m‚¢Ñ[0m[38;2;99;41;56m‚°¢[0m[38;2;107;42;42m‚°î[0m[38;2;91;45;47m‚°î[0m[38;2;127;67;69m‚°ñ[0m[38;2;163;100;104m‚°é[0m[38;2;178;119;122m‚°¶[0m[38;2;130;55;67m‚£™[0m[38;2;184;142;160m‚£æ[0m[38;2;254;248;250m‚£ø[0m[38;2;252;244;248m‚£ø[0m[38;2;222;202;201m‚£∑[0m[38;2;148;97;90m‚£∂[0m[38;2;31;16;15m‚£§[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m[38;2;0;0;0m‚†Ä[0m",
			},
		},
	},
}

function M:show()
	local mode = vim.api.nvim_get_mode()
	if mode == "i" or not vim.bo.modifiable then
		return
	end

	if not vim.o.hidden and vim.bo.modified then
		--save before open
		vim.cmd.write()
		return
	end

	if not utils.buf_is_empty(0) then
		self.bufnr = vim.api.nvim_create_buf(false, true)
	else
		self.bufnr = vim.api.nvim_get_current_buf()
	end

	self.winid = vim.api.nvim_get_current_win()
	vim.api.nvim_win_set_buf(self.winid, self.bufnr)

	self.user_cursor_line = vim.opt.cursorline:get()

	local opts = {
		["bufhidden"] = "wipe",
		["colorcolumn"] = "",
		["foldcolumn"] = "0",
		["matchpairs"] = "",
		["buflisted"] = false,
		["cursorcolumn"] = false,
		["cursorline"] = false,
		["list"] = false,
		["number"] = false,
		["relativenumber"] = false,
		["spell"] = false,
		["swapfile"] = false,
		["readonly"] = false,
		["filetype"] = "dashboard",
		["wrap"] = false,
		["signcolumn"] = "no",
		["winbar"] = "",
	}
	for opt, val in pairs(opts) do
		vim.opt_local[opt] = val
	end

	vim.api.nvim_create_autocmd("VimResized", {
		buffer = self.bufnr,
		callback = function()
			vim.bo[self.bufnr].modifiable = true
			print(".2.")
			require("test.init"):render()
			vim.bo[self.bufnr].modifiable = false
		end,
	})

	vim.api.nvim_create_autocmd("BufEnter", {
		callback = function(opt)
			local bufs = vim.api.nvim_list_bufs()
			bufs = vim.tbl_filter(function(k)
				return vim.bo[k].filetype == "dashboard"
			end, bufs)
			if #bufs == 0 then
				pcall(vim.api.nvim_del_autocmd, opt.id)
			end
		end,
		desc = "[Dashboard] clean dashboard data reduce memory",
	})

	self:render()
	vim.bo[self.bufnr].modifiable = false
end

function M:render()
	self:get_valid()

	if #self.valid == 0 then
		print("not matching dashboard );")
	else
		self:draw(self.valid[math.random(1, #self.valid)])
	end
end

function M:get_valid()
	self.valid = {}

	for _, dashboard in ipairs(self.opts.dashboards) do
		if dashboard.width <= vim.api.nvim_win_get_width(0) then
			if dashboard.height <= vim.api.nvim_win_get_height(0) - (#self.opts.keybinds * 2 + 1) then
				table.insert(self.valid, dashboard)
			end
		end
	end
end

function M:draw(dashboard)
	--vim.api.nvim_buf_set_text(self.bufnr, 0, 0, 10, 10, dashboard.ascii)
	if dashboard.colors then
		local baleia = require("baleia").setup({})
		baleia.buf_set_lines(self.bufnr, 0, -1, true, dashboard.ascii)
	else
		vim.api.nvim_buf_set_lines(self.bufnr, 0, -1, true, dashboard.ascii)
	end
end

function M.setup(opts)
	opts = opts or {}
	M.opts = vim.tbl_deep_extend("force", default_opts, opts)
end

return M
